{
    "name": "wf_resolve_table_by_slug",
    "nodes": [
      {
        "parameters": {},
        "id": "Start",
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [200, 200]
      },
      {
        "parameters": {
          "functionCode": "const { baseUrl, token, registryTableId, slug } = items[0].json;\nreturn [{ json: { url: `${baseUrl}/api/database/rows/table/${registryTableId}/?user_field_names=true&filter__field_slug__equal=${encodeURIComponent(slug)}`, headers: { Authorization: `Token ${token}` } } }];"
        },
        "id": "BuildRequest",
        "name": "Build Request",
        "type": "n8n-nodes-base.function",
        "typeVersion": 2,
        "position": [400, 200]
      },
      {
        "parameters": {
          "url": "={{$json[\"url\"]}}",
          "options": {},
          "sendHeaders": true,
          "headerParametersUi": {
            "parameter": [
              {
                "name": "Authorization",
                "value": "={{$json[\"headers\"][\"Authorization\"]}}"
              }
            ]
          }
        },
        "id": "HTTP",
        "name": "HTTP",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4,
        "position": [640, 200]
      },
      {
        "parameters": {
          "functionCode": "const r = items[0].json;\nif (!r.results || !r.results[0] || !r.results[0].table_id) {\n  throw new Error('Slug n√£o encontrado no registry');\n}\nreturn [{ json: { tableId: r.results[0].table_id } }];"
        },
        "id": "Parse",
        "name": "Parse",
        "type": "n8n-nodes-base.function",
        "typeVersion": 2,
        "position": [860, 200]
      }
    ],
    "pinData": {},
    "connections": {
      "Start": { "main": [[{ "node": "Build Request", "type": "main", "index": 0 }]] },
      "Build Request": { "main": [[{ "node": "HTTP", "type": "main", "index": 0 }]] },
      "HTTP": { "main": [[{ "node": "Parse", "type": "main", "index": 0 }]] }
    }
  }
  